"""Initial migration

Revision ID: 618cbb2e5a4f
Revises: 
Create Date: 2025-09-19 04:22:46.944014

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '618cbb2e5a4f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('knowledge_base',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('solution', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('language', sa.String(length=50), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('ticket_number', sa.String(length=50), nullable=False),
    sa.Column('source', sa.Enum('EMAIL', 'GLPI', 'SOLMAN', 'SMS', 'WEB', name='ticketsource'), nullable=False),
    sa.Column('source_id', sa.String(length=100), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('original_text', sa.Text(), nullable=False),
    sa.Column('detected_language', sa.String(length=50), nullable=True),
    sa.Column('language_confidence', sa.Float(), nullable=True),
    sa.Column('is_mixed_language', sa.Boolean(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('urgency', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='ticketurgency'), nullable=True),
    sa.Column('ai_confidence', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', 'ESCALATED', name='ticketstatus'), nullable=True),
    sa.Column('assigned_to', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('user_name', sa.String(length=255), nullable=True),
    sa.Column('user_department', sa.String(length=100), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticket_number')
    )
    op.create_table('ticket_analytics',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('ticket_id', sa.String(length=36), nullable=False),
    sa.Column('first_response_time_minutes', sa.Integer(), nullable=True),
    sa.Column('resolution_time_minutes', sa.Integer(), nullable=True),
    sa.Column('escalation_count', sa.Integer(), nullable=True),
    sa.Column('ai_accuracy_score', sa.Float(), nullable=True),
    sa.Column('similar_tickets_found', sa.Integer(), nullable=True),
    sa.Column('auto_resolution_attempted', sa.Boolean(), nullable=True),
    sa.Column('auto_resolution_successful', sa.Boolean(), nullable=True),
    sa.Column('user_satisfaction_score', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket_responses',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('ticket_id', sa.String(length=36), nullable=False),
    sa.Column('response_text', sa.Text(), nullable=False),
    sa.Column('response_language', sa.String(length=50), nullable=True),
    sa.Column('is_ai_response', sa.Boolean(), nullable=True),
    sa.Column('is_auto_response', sa.Boolean(), nullable=True),
    sa.Column('responder_name', sa.String(length=255), nullable=True),
    sa.Column('ai_model_used', sa.String(length=100), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ticket_responses')
    op.drop_table('ticket_analytics')
    op.drop_table('tickets')
    op.drop_table('knowledge_base')
    # ### end Alembic commands ###
